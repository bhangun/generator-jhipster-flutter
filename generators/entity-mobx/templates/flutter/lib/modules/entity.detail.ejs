<%_
  const dartFields = {};
  const index = {};
  let hasUserRelationship = false;
  const id = {};
  var i=0;

  id['type'] = 'int';
  id['name'] = 'id';
  id['i']=i;
  dartFields['id'] = id;

  fields.forEach(field => {
      i++;
      const varValue = {};
      const fieldType = field.fieldType;
      const fieldName = field.fieldName;
      let dartType;
      let dartCont;
      let desc;
      if (field.fieldIsEnum) {
          dartType = fieldType;
      } else if ( fieldType === 'UUID' || fieldType === 'String') {
          dartType = 'String';
          dartCont = 'TextEditingController()';
      } else if ( fieldType === 'Instant') {
          dartType = 'DartTime';
          desc = '.toIso8601String()' + 'Z';
      } else {
          dartType = fieldType ;
      } 

      varValue['type'] = dartType;
      varValue['name'] = fieldName;
      varValue['desc'] = desc;
      varValue['cont'] = dartCont;
      varValue['i']=i;
      
      dartFields[fieldName] = varValue;
  });
_%>
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

import 'package:<%= appsName %>/widgets/appbar_widget.dart';
import '../bloc/<%= entityInstance %>_bloc.dart';


class <%= entityClass %>Detail extends StatefulWidget {
  @override
  _<%= entityClass %>DetailState createState() => _<%= entityClass %>DetailState();
}

class _<%= entityClass %>DetailState extends State<<%= entityClass %>Detail> {
  <%= entityClass %>Store _<%= entityInstance %>Bloc;

  @override
  void dispose() {
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
   
    return Scaffold(
            appBar: buildAppBar(context, '<%= entityClass %> Detail'),
            body: _<%= entityInstance %>Bloc.isItemEmpty
                ? Center(child: Text('<%= entityClass %> data are empty'))
                : <%= entityInstance %>Detail(),
            floatingActionButton: FloatingActionButton(
              onPressed: () => _<%= entityInstance %>Bloc.update(),
              tooltip: 'Edit',
              child: Icon(Icons.edit),
            ));
  }

  <%= entityInstance %>Detail() {
    return ListView(
        padding: EdgeInsets.symmetric(horizontal: 24.0),
        children: <Widget>[
          SizedBox(height: 100.0),
          Icon(Icons.person, size: 100, color: Colors.blue[500]),
          Column(children: <Widget>[<%for (idx in dartFields) { %><%if(idx!='id'){%>
            Text(_<%= entityInstance %>Bloc.itemDetail.<%= dartFields[idx]['name'] %><%if(['int','Integer'].includes(dartFields[idx]['type']) ){%>.toString()<%}%>),<%}}%>
          ])
        ]);
  }
}