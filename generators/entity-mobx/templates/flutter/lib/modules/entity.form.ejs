<%_
  const dartFields = {};
  const index = {};
  let hasUserRelationship = false;
  const id = {};
  var i=0;

  id['type'] = 'int';
  id['name'] = 'id';
  id['i']=i;
  dartFields['id'] = id;

  function capitalize(text){
    return text.substr( 0, 1 ).toUpperCase()+text.substr( 1 );
  }

  fields.forEach(field => {
      i++;
      const varValue = {};
      const fieldType = field.fieldType;
      const fieldName = field.fieldName;
      let dartType;
      let dartCont;
      let desc;
      if (field.fieldIsEnum) {
          dartType = 'enum';
      } else if ( fieldType === 'UUID' || fieldType === 'String') {
          dartType = 'String';
      } else if ( fieldType === 'Integer') {
        dartType = 'int';
      } else if ( fieldType === 'Instant') {
          dartType = 'DartTime';
          desc = '.toIso8601String()' + 'Z';
      } else {
          dartType = fieldType ;
      } 

      dartCont = 'TextEditingController()';

      varValue['type'] = dartType;
      varValue['name'] = fieldName;
      varValue['desc'] = desc;
      varValue['cont'] = dartCont;
      varValue['i']=i;
      
      dartFields[fieldName] = varValue;
  });

  relationships.forEach(rela => { 
    if(rela.relationshipType == 'many-to-one' || rela.relationshipType == 'one-to-one' && rela.ownerSide == true
    || rela.relationshipType == 'many-to-many'  && rela.ownerSide == true ){
        
        const varValue = {};
        varValue['type'] = capitalize(rela.otherEntityName);
        varValue['name'] = rela.relationshipName;
        varValue['desc'] = 'relationship';
        varValue['isList'] = (rela.relationshipType=='many-to-many')?true:false;
        
        dartFields[rela.otherEntityName] = varValue;
    }
  });

_%>
import 'package:flutter/material.dart';

import '../store/<%= entityInstance %>_store.dart';
import 'package:<%= appsName %>/widgets/global_methods.dart';
import 'package:<%= appsName %>/widgets/progress_indicator_widget.dart';
import '../models/<%= entityInstance %>.dart';<% for (idx in dartFields) { %><% if (dartFields[idx]['desc'] == 'relationship') {%>
import '../../<%= idx %>/store/<%= idx %>_store.dart'; <%}}%>

class <%= entityClass %>Form extends StatefulWidget {
  final <%= entityClass %>? data;
  <%= entityClass %>Form({this.data});
  @override
  _<%= entityClass %>FormState createState() => _<%= entityClass %>FormState();
}

class _<%= entityClass %>FormState extends State<<%= entityClass %>Form> {
  <% for (idx in dartFields) { %><% if(idx=='id' || dartFields[idx]['desc'] == 'relationship') {%>
  <%} else if (dartFields[idx]['type'] == 'enum') {%>
  var _<%= dartFields[idx]['name'] %> = ''; <%} else {%>
  final _<%= dartFields[idx]['name'] %> = <%= dartFields[idx]['cont'] %>;<%}%><%}%>

  late <%= entityClass %>Store _<%= entityInstance %>Store = <%= entityClass %>Store();<% for (idx in dartFields) { %><% if (dartFields[idx]['desc'] == 'relationship') {%>
  late <%= capitalize(idx) %>Store _<%= idx %>Store = <%= entityClass %>Store(); <%}}%>

  @override
  void dispose() {<% for (idx in dartFields) { %><% if (dartFields[idx]['type'] != 'enum' && idx!='id' && dartFields[idx]['desc'] != 'relationship') {%>
    _<%= dartFields[idx]['name'] %>.dispose();<%}%><%}%>
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {

   
    <% for (idx in dartFields) { if (idx != 'id' && dartFields[idx]['type'] != 'enum' && dartFields[idx]['desc'] != 'relationship')  {%>
    _<%= dartFields[idx]['name'] %>.addListener(() {
      _<%= entityInstance %>Store.set<%= capitalize(dartFields[idx]['name'])%>(_<%= dartFields[idx]['name'] %>.text);
    }); <%}}%>

    return  Scaffold(
            appBar: AppBar(
              title: Text(_<%= entityInstance %>Store.formTitle),
            ),
            body: _buildBody(),
            floatingActionButton: FloatingActionButton(
              onPressed: () => _<%= entityInstance %>Store.save(),
              tooltip: 'Add',
              child: Icon(Icons.save),
            ));
  }

  _buildBody() {
    return Stack(
      children: <Widget>[
        _<%= entityInstance %>Store.loading
            ? CustomProgressIndicatorWidget()
            : Material(child: _buildForm()),
        _<%= entityInstance %>Store.success
            ? Container()
            : showErrorMessage(context, '') 
        //_<%= entityInstance %>Store.isModified ? KutAlert() : Container(),
      ],
    );
  }

  _buildForm() {
    return SafeArea(
        child: ListView(
            padding: EdgeInsets.symmetric(horizontal: 24.0),
            children: _buildListChild()));
  }

  _buildListChild() {
    return <Widget>[
      SizedBox(height: 120.0),<% for (idx in dartFields) { if (idx != 'id' && dartFields[idx]['type'] != 'enum')  {%>
      TextField(
        controller: _<%= dartFields[idx]['name'] %>,
        decoration: InputDecoration(
          filled: true,
          labelText: '<%= capitalize(dartFields[idx]['name']) %>',
        ),
      ),
      <%}}%>
    ];
  }
}
