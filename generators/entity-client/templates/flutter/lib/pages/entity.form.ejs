<%_
  const dartFields = {};
  const index = {};
  let hasUserRelationship = false;
  const id = {};
  var i=0;

  id['type'] = 'int';
  id['name'] = 'id';
  id['i']=i;
  dartFields['id'] = id;

  fields.forEach(field => {
      i++;
      const varValue = {};
      const fieldType = field.fieldType;
      const fieldName = field.fieldName;
      let dartType;
      let dartCont;
      let desc;
      if (field.fieldIsEnum) {
          dartType = fieldType;
      } else if ( fieldType === 'UUID' || fieldType === 'String') {
          dartType = 'String';
          dartCont = 'TextEditingController()';
      } else if ( fieldType === 'Instant') {
          dartType = 'DartTime';
          desc = '.toIso8601String()' + 'Z';
      } else {
          dartType = fieldType ;
      } 

      varValue['type'] = dartType;
      varValue['name'] = fieldName;
      varValue['desc'] = desc;
      varValue['cont'] = dartCont;
      varValue['i']=i;
      
      dartFields[fieldName] = varValue;
  });

  relationships.forEach(relationship => {
    let fieldType;
    let fieldName;
    const relationshipType = relationship.relationshipType;
    if (relationshipType === 'one-to-many' || relationshipType === 'many-to-many') {
        if (relationship.otherentityClass === 'User') {
            fieldType = 'User[]';
            hasUserRelationship = true;
        } else {
            fieldType = 'BaseEntity[]';
        }
        fieldName = relationship.relationshipFieldNamePlural;
    } else {
        if (dto === 'no') {
            if (relationship.otherentityClass === 'User') {
                fieldType = 'User';
                hasUserRelationship = true;
            } else {
                fieldType = 'BaseEntity';
            }
            fieldName = relationship.relationshipFieldName;
        } else {
            fieldType = dartKeyType;
            fieldName = `${relationship.relationshipFieldName}Id`;
        }
    }
    
  });
_%>


import 'package:flutter/material.dart';
import '<%= entityClass.toLowerCase() %>.helper.dart';
import '<%= entityClass.toLowerCase() %>.dart';
import '../../services/services.dart';

class <%= entityClass %>FormPage extends StatefulWidget {
  final <%= entityClass %> data;
  <%= entityClass %>FormPage({this.data});
  @override
  _<%= entityClass %>FormPageState createState() => _<%= entityClass %>FormPageState();
}

class _<%= entityClass %>FormPageState extends State<<%= entityClass %>FormPage> {
  bool isEdited = false;<% for (idx in dartFields) { %><% if(idx=='id') {%>
  var _id; <%} else {%>
  final _<%= dartFields[idx]['name'] %> = <%= dartFields[idx]['cont'] %>;<%}%><%}%>

  @override
  Widget build(BuildContext context) {
    if (widget.data != null) {
      isEdited = true;
      <%= entityClass %> <%= entityClass.toLowerCase() %> = widget.data;<% for (idx in dartFields) { %>
      _<%= dartFields[idx]['name'] %>.text = <%= entityClass.toLowerCase() %>.<%= dartFields[idx]['name'] %>;<%}%>
    }

    return Scaffold(
        appBar: AppBar(
          title: Text('Create <%= entityClass %>'),
        ),
        body: SafeArea(
            child: ListView(
                padding: EdgeInsets.symmetric(horizontal: 24.0),
                children: _listChild())),
        floatingActionButton: FloatingActionButton(
          onPressed: _save,
          tooltip: 'Add',
          child: Icon(Icons.save),
        ));
  }

  _listChild() {
    return <Widget>[
      SizedBox(height: 120.0),<% for (idx in dartFields) { %>
      TextField(
        controller: _<%= dartFields[idx]['name']%>,
        decoration: InputDecoration(
          filled: true,
          labelText: '<%= dartFields[idx]['name']%>',
        ),
      ), <%}%>

    ];
  }

  void _save() async {
    try {
      if (isEdited) {
        await update<%= entityClass %>(<%= entityClass %>(<% for (idx in dartFields) { %>
          <%= dartFields[idx]['name'] %>: _<%= dartFields[idx]['name'] %>.text,<%}%>
        ));
        isEdited =false;  
      } else {
        await create<%= entityClass %>(<%= entityClass %>(<% for (idx in dartFields) { %>
          <%= dartFields[idx]['name'] %>: _<%= dartFields[idx]['name'] %>.text,<%}%>
        ));
      }
    } catch (e) {
      print("gk bisa imel");
    }
    Navigator.pop(context);
  }

  void _clearForm() {<% for (idx in dartFields) { %><% if(idx!='id') {%>
    _<%= dartFields[idx]['name'] %>.clear();<%}%><%}%>
  }
}
